//*problem1
algorithm problem1 
var
  n,m:integer;
  set1:array of integer[n];
  set2:array of integer[m];
  sum:integer=0;
  i,j:integer;
BEGIN
   j=0;
   for i from 0 to m do
      if set1[j]!=set2[i] then 
         sum=sum+set1[j];
         j:=j+1;
      else
      j:=j+1;
      end if
    end for 
    j=0;
    for i from 0 to n do 
         if set2[j]!=set1[j]then 
             sum=sum+set2[2];
         else
           j:=j+1;
         end if 
    end for 
    wwrite(sum)
END 
--------------------------------------------------------------
//*problem2 
// algotiyhme principale:
Algorithme VerifierOrthogonalite
Var
    v1, v2 : array of integer[n]
    ps :integer
    i, j, n, nbVecteurs : integerr

BEGIN
    write "Donner la taille des vecteurs : "
    read n

    write "Donner le nombre de paires de vecteurs à tester : "
    read  nbVecteurs

   for i from 0 to  nbVecteurs do
        write "Vecteur v1 (", i, ") : "
        for j from 0 to  n-1 do
            read  v1[j]
        end for 

        write "Vecteur v2 (", i, ") : "
        for j from 0 to n-1 do
            read v2[j]
        end for

        // Appel de la procédure
         dot_product(v1, v2, n, ps)

        if ps = 0 then
            read "Les vecteurs ", i, " sont orthogonaux."
        else
            Écwriterire "Les vecteurs ", i, " ne sont pas orthogonaux."
        end if 
    end for
END 
//fonction dot_product
Fonction dot_product(v1 : array of integer [n], v2 : array of integer[n], n : integer) : integer
Var
    i, j, ps : integer
BEGIN
    ps := 0

    for i from 0 to n-1 do
        for j from 0 to 0 do  // Boucle imbriquée juste pour consigne
            ps := ps + v1[i] * v2[i]
        end for
    end for

    retur ps
END 
// Algorithme principal (modifié pour la fonction)
Algorithme VerifierOrthogonaliteAvecFonction
Var
    v1, v2 : array of integer[n]
    ps : integer
    i, j, n, nbVecteurs : integer

BEGIN
    write "Donner la taille des vecteurs : "
    read n

    write "Donner le nombre de paires de vecteurs à tester : "
    read nbVecteurs

    for i from 1 to nbVecteurs do
        write "Vecteur v1 (", i, ") : "
        for i from 0 to n-1 do
            read v1[j]
        end for

        write "Vecteur v2 (", i, ") : "
        for i from 0 to n-1 do
            read v2[j]
        end for

        // Appel de la fonction
        ps = dot_product(v1, v2, n)

        if ps = 0 then
            write "Les vecteurs ", i, " sont orthogonaux."
        else
            write "Les vecteurs ", i, " ne sont pas orthogonaux."
        end if
    end for
END 




    